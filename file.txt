

ymaps.ready(init);

function init(longt, lat) {
    var myMap = new ymaps.Map('map', {
            center: [30.264981955459618, 59.9567962610097],
            // center: [43.15, 76.54],
            zoom: 9,
            controls: ['geolocationControl', 'searchControl']
        }),
        deliveryPoint = new ymaps.GeoObject({
            geometry: {type: 'Point'},
            properties: {iconCaption: 'Адрес'}
        }, {
            preset: 'islands#blackDotIconWithCaption',
            draggable: true,
            iconCaptionMaxWidth: '215'
        }),
        searchControl = myMap.controls.get('searchControl');
    searchControl.options.set({noPlacemark: true, placeholderContent: 'Введите адрес доставки'});
    myMap.geoObjects.add(deliveryPoint);

    //longt = 30.264981955459618;
    //lat = 59.9567962610097;
    function onZonesLoad(json) {
        // Добавляем зоны на карту.
        var deliveryZones = ymaps.geoQuery(json).addToMap(myMap);
        // Задаём цвет и контент балунов полигонов.
        // deliveryZones.each(function (obj) {
        //     obj.options.set({
        //         fillColor: obj.properties.get('fill'),
        //         fillOpacity: obj.properties.get('fill-opacity'),
        //         strokeColor: obj.properties.get('stroke'),
        //         strokeWidth: obj.properties.get('stroke-width'),
        //         strokeOpacity: obj.properties.get('stroke-opacity')
        //     });
        //     obj.properties.set('balloonContent', obj.properties.get('description'));
        // });
        // // Проверим попадание результата поиска в одну из зон доставки.
        // searchControl.events.add('resultshow', function (e) {
        //     highlightResult(searchControl.getResultsArray()[e.get('index')]);
        // });

        // // Проверим попадание метки геолокации в одну из зон доставки.
        // myMap.controls.get('geolocationControl').events.add('locationchange', function (e) {
        //     console.log(searchControl.getResultsArray()[e.get('geoObjects').get(0)]);

        //     highlightResult(e.get('geoObjects').get(0));
        // });

        // // При перемещении метки сбрасываем подпись, содержимое балуна и перекрашиваем метку.
        // deliveryPoint.events.add('dragstart', function () {
        //     deliveryPoint.properties.set({iconCaption: '', balloonContent: ''});
        //     deliveryPoint.options.set('iconColor', 'black');
        // });

        // // По окончании перемещения метки вызываем функцию выделения зоны доставки.
        // deliveryPoint.events.add('dragend', function () {
        //     highlightResult(deliveryPoint);
        // });

        // console.log(deliveryPoint);
        highlightResult();
        function highlightResult() {

            // Сохраняем координаты переданного объекта.

            var coords = [longt, lat],
                    polygon = deliveryZones.searchContaining(coords).get(0);



            console.log(coords);
            // var coords = obj.geometry.getCoordinates(),
            // // Находим полигон, в который входят переданные координаты.
            //     polygon = deliveryZones.searchContaining(coords).get(0);


            if (polygon) {
                // kiredi
               console.log("Hello man1");
               return true;
            } else {
                // kirmeidi
               console.log("Hello man2");
               return false;
            }

            function setData(obj){
                var address = [obj.getThoroughfare(), obj.getPremiseNumber(), obj.getPremise()].join(' ');
                if (address.trim() === '') {
                    address = obj.getAddressLine();
                }
                var price = polygon.properties.get('description');
                price = price.match(/<strong>(.+)<\/strong>/)[1];
                deliveryPoint.properties.set({
                    iconCaption: address,
                    balloonContent: address,
                    balloonContentHeader: price
                });
            }
        }
    }



    $.ajax({
        url: 'data.geojson',
        dataType: 'json',
        success: onZonesLoad
    });
}